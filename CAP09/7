
#Modifica wgrep para que tome una opción opcional -w que especifique el tamaño de la ventana; así que
#wgrep -w 3 UNIX text
#debería imprimir tres líneas antes y después de cada línea del archivo text que contenga el patrón UNIX.


# Determine window size $winsize; default is 1

winsize=1
while getopts w: option
do
    case "$option" in

	w)  winsize=$OPTARG
	    # Ensure that an integer argument is passed to -w
	    case $winsize in

		# Checks for empty value or anything not a digit
		''|*[!0-9]*) 
		    echo "argumento no entero positivo para -w"
		    exit 1;;

		*)
		    # noop
		    :;;
	    esac;;

	\?) echo '¡opción no válida!'
	    echo 'uso: wgrep [-w winsize] patrón archivo'
	    exit 1;;
    esac
done

# Save pattern to $pattern and filename to $filename
if [ "$OPTIND" -ge "$#" ]
then
    echo "¡falta el nombre del archivo o el patrón!"
    echo 'uso: wgrep [-w winsize] patrón archivo'
    exit 2
else
    shiftcount=$((OPTIND - 1))
    shift $shiftcount
    pattern=$1
    filename=$2
fi

# Check filename argument for validity
if [ $# -ne 2 ]
then
    echo 'uso: wgrep patrón archivo'
    exit 1
elif ! [ -f $filename ]
then
    echo "archivo $filename no encontrado"
    exit 1
fi

# Number of lines in the file
filelen=$(wc -l "$filename" | cut -d ' ' -f1)

# Obtain the line numbers on which matches are found
matches=$(grep -n "$pattern" "$filename" | cut -d ':' -f1)

# Each iteration through the loop prints the line before the $linum line, the
# line itself, and the line after.  This is accomplished in each iteration by
# using head to restrict the data to the first $linum + 1 lines, and then using
# tail to slice off the last 3 lines.  Note that consecutive line matches will
# result in overlapping data.
for linum in $matches
do
    # If a match is made near the end of the file, then we may need to adjust
    # the parameter given to tail accordingly
    n_diff=$(($filelen - $linum))
    if [ $winsize -le $n_diff ]
    then
	taillen=$((2 * $winsize + 1))
    else
	taillen=$(($winsize + 1 + $n_diff))
    fi

    echo '<-- inicio -->'
    head -$(($linum + $winsize)) $filename | tail -$taillen
    echo '<--  fin  -->'
    echo ''
done








